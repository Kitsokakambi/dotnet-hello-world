name: .NET Application CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Install .NET dependencies
        working-directory: ./hello-world-api
        run: |
          dotnet restore

      - name: Run tests for .NET
        working-directory: ./hello-world-api
        run: |
          dotnet test

  dockerize-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image for .NET
        working-directory: ./hello-world-api
        run: |
          docker build -t dotnet-hello-world:latest .

      - name: Tag Docker image to ACR
        working-directory: ./hello-world-api
        run: |
          docker tag dotnet-hello-world:latest ${{ secrets.ACR_NAME }}.azurecr.io/dotnet-hello-world:latest

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Push Docker image for .NET to ACR
        run: |
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/dotnet-hello-world:latest

  deploy:
    runs-on: ubuntu-latest
    needs: dockerize-and-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy .NET app to Azure App Service
        run: |
          az webapp config container set \
            --name dotnet-hello-world-app \
            --resource-group RGroup \
            --docker-custom-image-name ${{ secrets.ACR_NAME }}.azurecr.io/dotnet-hello-world:latest \
            --plan MyAppServicePlan
